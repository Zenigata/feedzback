orbs:
  common: okode/common@2.0.13
  node: circleci/node@4 # the node orb provides common node-related configuration
  cypress: cypress-io/cypress@1


version: 2.1 # using 2.1 provides access to orbs and other features
executors:
   node:
     docker:
       - image: cimg/node:16.13.0
   with-chrome:
    resource_class: small
    docker:
      - image: "cypress/browsers:latest"
     

jobs:
  install-client-dependencies:
    executor:
      name: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v11-packaging-dependencies-{{ checksum "client/package-lock.json"}}
            
      - run:
          name: install_client_dependencies
          working_directory: client
          command: |
           npm ci
           sudo npm install -g concurrently


      - save_cache:
          paths:
            - client/node_modules         
          key: v11-packaging-dependencies-{{ checksum "client/package-lock.json" }}
   


  unit-test:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v11-packaging-dependencies-{{ checksum "client/package-lock.json" }}
      
      - run:
          name: unit-test
          working_directory: client
          command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
  
      

  build:
    executor: node
    steps:
      - checkout
      - restore_cache:
           keys:
             - v11-packaging-dependencies-{{ checksum "client/package-lock.json"}}
      - run:
          name: build_front_end
          working_directory: client
          command: npm run build
      
      - persist_to_workspace:
          root: client/dist
          paths:
            - ./*

  cypress:
    executor: node
    steps:
      - checkout
      - run:
          name: install_cypress_dependencies
          command: |
             npm install
             sudo npm install -g concurrently
             npm install --save-dev cypress
     

      - run:
          name: e2e-tests
          command: npm run dev
      

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - attach_workspace:
          at: client/dist
      - restore_cache:
           keys:
             - v11-packaging-dependencies-{{ checksum "client/package-lock.json"}}
            
      - run:
          name: Set up gcloud config
          command: |
            echo ${GCLOUD_KEY} > /tmp/sa_key.json 
            gcloud auth activate-service-account --key-file=/tmp/sa_key.json
            rm /tmp/sa_key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}  

      - run:
          name: deploy
          working_directory: client
          command: gcloud app deploy app.yaml --version="version-client"

    
  deploy-server:
     docker:
      - image: google/cloud-sdk
     steps:
      - checkout
      - restore_cache:
           keys:
             - v11-packaging-dependencies-{{ checksum "client/package-lock.json"}}
            
      - run:
          name: Set up gcloud config
          command: |
            echo ${GCLOUD_KEY} > /tmp/sa_key.json 
            gcloud auth activate-service-account --key-file=/tmp/sa_key.json
            rm /tmp/sa_key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}  

      - run:
          name: deploy-server
          working_directory: server
          command: gcloud app deploy app.yaml --version="version-server"
          


      
      

workflows:
  matrix-tests:
    jobs:
      - install-client-dependencies
      - cypress/install
      - cypress/run:
         executor: with-chrome
         browser: chrome
         yarn: false
         requires:
            - cypress/install
         cache-key: 'v11-packaging-dependencies-{{ checksum "client/package-lock.json"}}'
         pre-steps:
           - run: |
              npm install -g concurrently
              npm ci
         start: 
           npm run dev
           
      - unit-test:
           requires:
              - install-client-dependencies
      
      - build:
          requires:
            - unit-test

      - deploy-server:
           requires:
            - cypress/run

      - deploy:
          requires:
            - build
            - deploy-server
        
           
      
      
      
     
